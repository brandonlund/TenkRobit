// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5638.TenkRobit.subsystems;

import org.usfirst.frc5638.TenkRobit.Robot;
import org.usfirst.frc5638.TenkRobit.RobotMap;
import org.usfirst.frc5638.TenkRobit.commands.*;

import com.ctre.Drive.*;
import com.ctre.Drive.Styles.Basic;
import com.ctre.Drive.Styles.Smart;
import com.ctre.Mechanical.*;
import com.ctre.MotorControl.CANTalon;

import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.TalonSRX;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class driveSub extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon leftMotor1 = RobotMap.left1;
    private final CANTalon leftMotor2 = RobotMap.left2;
    private final CANTalon rightMotor1 = RobotMap.right1;
    private final CANTalon rightMotor2 = RobotMap.right2;
    private final SensoredGearbox left = RobotMap.left;
    private final SensoredGearbox right = RobotMap.right;
    private final SensoredTank drive = RobotMap.drive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new driveCom());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    double throttle = Robot.oi.xbox.getRawAxis(3);
    double turn = Robot.oi.xbox.getRawAxis(1);
    
    public void takeJoystickInputs(Joystick xbox) {
    	drive.set(Basic.PercentOutput, (float)throttle, (float)turn);
    	System.out.println(drive.GetDistance() + " " + RobotMap.left.GetPosition() + " " + right.GetPosition() + " " + drive.GetVelocity() + " " + leftMotor1.getOutputVoltage());
    	System.out.println("Velocity: " );
    	
    }
}

